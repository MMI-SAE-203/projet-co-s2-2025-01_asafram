---
import IconeFavoris from "../../assets/icones/icone-etoile.svg";
import IconeEtoileNote from "../../assets/icones/etoile-note.svg";
import IconeDistance from "../../assets/icones/icone-coordonnes.svg";
const { product } = Astro.props;

const formattedPrice = product?.prix ? `${product.prix.toFixed(2)}€` : "";

const rating = product?.note || 0;
const fullStars = Math.floor(rating);
const hasHalfStar = rating % 1 >= 0.5;
const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

const isFavorite = false;
---

<a
  href={`/site-applicatif/produits/${product.id}`}
  class="card-produit w-[281px] h-[345px] relative border-2 border-saumon rounded-[15px] bg-white p-4 flex flex-col transition-transform duration-300 hover:scale-[1.01] cursor-pointer"
  data-product-id={product.id || "produit-demo"}
>
  <div class="flex justify-between items-center w-full">
    {
      product.expand?.pays && (
        <div class="flex items-center">
          <div class="flag w-[26px] h-[19px] mr-[10px] border border-black overflow-hidden">
            {product.expand.pays.drapeauUrl && (
              <img
                src={product.expand.pays.drapeauUrl}
                alt={product.expand.pays.nom}
                class="w-full h-full object-cover"
              />
            )}
          </div>
          <span class="text-sm font-bold text-black uppercase">
            {product.expand.pays.nom}
          </span>
        </div>
      )
    }

    <button
      class="cursor-pointer favorite-btn w-[38px] h-[38px] bg-saumon rounded-full flex justify-center items-center transition-all duration-300 hover:bg-[#e69c50] z-20"
      aria-label={isFavorite ? "Retirer des favoris" : "Ajouter aux favoris"}
      data-product-id={product.id || "produit-demo"}
    >
      <img
        src={IconeFavoris.src}
        alt="Favoris"
        width={18}
        height={17}
        class={`${isFavorite ? "opacity-100" : "opacity-75"} transition-opacity`}
      />
    </button>
  </div>

  <div class="flex-grow flex justify-center items-center my-2">
    <div class="relative w-[166px] h-[166px]">
      <div
        class="absolute top-0 left-0 w-full h-full flex items-center justify-center"
      >
        <div class="w-[160px] h-[160px] bg-saumon opacity-75 rounded-full">
        </div>
      </div>

      {
        product.img && (
          <div class="absolute top-0 left-0 w-full h-full flex items-center justify-center">
            <div class="w-[140px] h-[140px] overflow-hidden flex items-center justify-center">
              <img
                src={product.img}
                alt={product.nom}
                class="w-40 h-40 object-contain"
              />
            </div>
          </div>
        )
      }
    </div>
  </div>

  <h3
    class="!text-lg uppercase !font-raleway font-bold text-black mt-0 pt-0 pb-0"
  >
    {product.nom}
  </h3>

  <div class="mt-auto">
    <div class="flex items-center">
      <span class="w-1 h-1 bg-black rounded-full"></span>
      <span class="mx-[15px] text-lg !font-extrabold text-black"
        >{formattedPrice}</span
      >
      <span class="w-1 h-1 bg-black rounded-full"></span>
    </div>

    <div class="flex justify-between items-center">
      <div class="flex items-center">
        <div class="flex gap-[7px] mr-[7px]">
          {
            Array(fullStars)
              .fill(0)
              .map(() => (
                <img
                  src={IconeEtoileNote.src}
                  alt="Étoile"
                  width={15}
                  height={15}
                  class="text-saumon"
                />
              ))
          }

          {
            hasHalfStar && (
              <img
                src={IconeEtoileNote.src}
                alt="Demi-étoile"
                width={15}
                height={15}
                class="opacity-50"
              />
            )
          }

          {
            Array(emptyStars)
              .fill(0)
              .map(() => (
                <img
                  src={IconeEtoileNote.src}
                  alt="Étoile vide"
                  width={15}
                  height={15}
                  class="grayscale opacity-50"
                />
              ))
          }
        </div>

        {
          product.nbNotes && (
            <span class="text-xs text-black">(+{product.nbNotes})</span>
          )
        }
      </div>

      {
        product.distance && (
          <div class="bg-saumon rounded-full flex items-center py-[5px] px-[12px]">
            <img
              src={IconeDistance.src}
              alt="Distance"
              width={13}
              height={13}
              class="mr-1"
            />
            <span class="text-xs text-black">{product.distance} km</span>
          </div>
        )
      }
    </div>
  </div>
</a>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const favButtons = document.querySelectorAll(".favorite-btn");
    const productCards = document.querySelectorAll(".card-produit");

    favButtons.forEach((btn) => {
      btn.addEventListener("click", async (e) => {
        e.stopPropagation();

        const productId = btn.getAttribute("data-product-id");
        const isFavorite = btn.classList.contains("is-favorite");

        try {
          btn.classList.toggle("is-favorite");
          const iconElement = btn.querySelector("img");

          if (iconElement) {
            if (isFavorite) {
              iconElement.classList.add("opacity-75");
              iconElement.classList.remove("opacity-100");
              btn.setAttribute("aria-label", "Ajouter aux favoris");

              console.log(`Retrait du produit ${productId} des favoris`);
            } else {
              iconElement.classList.add("opacity-100");
              iconElement.classList.remove("opacity-75");
              btn.setAttribute("aria-label", "Retirer des favoris");

              btn.classList.add("animate-heartbeat");
              setTimeout(() => {
                btn.classList.remove("animate-heartbeat");
              }, 1000);

              console.log(`Ajout du produit ${productId} aux favoris`);
            }
          }
        } catch (error) {
          console.error("Erreur lors de la mise à jour des favoris:", error);
          btn.classList.toggle("is-favorite");
        }
      });
    });
  });
</script>

<style>
  @keyframes heartbeat {
    0% {
      transform: scale(1);
    }
    25% {
      transform: scale(1.2);
    }
    50% {
      transform: scale(1);
    }
    75% {
      transform: scale(1.2);
    }
    100% {
      transform: scale(1);
    }
  }

  .animate-heartbeat {
    animation: heartbeat 0.5s ease-in-out;
  }

  .favorite-btn.is-favorite {
    background-color: #e69c50;
  }
</style>
