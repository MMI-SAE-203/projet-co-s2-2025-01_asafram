---
import LayoutApplicatif from "../../layouts/LayoutApplicatif.astro";
import CardProduits from "../../components/site-applicatif/CardProduits.astro";
import BulleCategorie from "../../components/site-applicatif/BulleCategorie.astro";
import {
  getProductsByContinent,
  getRecipeById,
  getPopularRecipes,
} from "../../../backend/backend.js";
import IconeBoissons from "../../assets/icones/icone-boissons.webp";
import IconeFruitsEtLegumes from "../../assets/icones/icone-fruits.webp";
import IconeViandes from "../../assets/icones/icone-viandes.webp";
import IconeEpices from "../../assets/icones/icone-epices.webp";
import IconeSnacks from "../../assets/icones/icone-snacks.webp";
import SvgAsie from "../../assets/icones/continent-asie.svg";
import SvgAfrique from "../../assets/icones/continent-afrique.svg";
import SvgAmeriqueLatine from "../../assets/icones/continent-ameriquelatine.svg";
import SvgMaghreb from "../../assets/icones/continent-maghreb.svg";
import CardRecettes from "../../components/site-applicatif/CardRecettes.astro";
// Définition des catégories
const categories = [
  { nom: "Boissons", icone: IconeBoissons },
  { nom: "Fruits et Légumes", icone: IconeFruitsEtLegumes },
  { nom: "Viandes", icone: IconeViandes },
  { nom: "Épices", icone: IconeEpices },
  { nom: "Snacks", icone: IconeSnacks },
];

// Récupération des produits asiatiques
const asianProductsResult = await getProductsByContinent("Asie", {
  perPage: 8, // On récupère 8 produits maximum
});

// Ajout d'une distance fictive aux produits et extraction des items de la réponse
const asianProducts = asianProductsResult.items.map((produit) => {
  // Ajout d'une distance (valeur fictive)
  produit.distance = 15;

  // Correction pour le nombre de notes (si nombres_notes existe mais pas nbNotes)
  if (produit.nombres_notes && !produit.nbNotes) {
    produit.nbNotes = produit.nombres_notes;
  }

  // Si aucune note n'est définie, on ajoute une valeur par défaut
  if (!produit.nbNotes) {
    produit.nbNotes = Math.floor(Math.random() * 50) + 10; // Entre 10 et 59 notes aléatoirement
  }

  return produit;
});

// Récupération des recettes populaires (8 max)
const popularRecipes = await getPopularRecipes(8);
---

<LayoutApplicatif title="ASAFRAM" description="Carte produit démo">
  <div class="bg-white">
    <!-- Section des catégories -->
    <section class="container mx-auto px-4 py-8">
      <ul class="flex flex-wrap justify-center gap-32 my-8">
        {
          categories.map((categorie) => (
            <li>
              <BulleCategorie nom={categorie.nom} icone={categorie.icone.src} />
            </li>
          ))
        }
      </ul>
    </section>

    <!-- Section des produits asiatiques -->
    <section class="container mx-auto px-4 py-8">
      <header class="mb-16">
        <h2
          class="text-2xl !text-left font-raleway font-extrabold uppercase tracking-wider relative inline-block pb-4"
        >
          Produits Asiatiques
        </h2>
        <div class="w-full h-0.5 bg-black mt-2"></div>
      </header>
      <div
        class="grid
        grid-cols-1
        sm:grid-cols-2
        lg:grid-cols-4
        gap-14
        justify-items-center"
      >
        {asianProducts.map((produit) => <CardProduits product={produit} />)}
      </div>

      <div class="flex justify-center mt-20">
        <a
          href="/site-applicatif/produits"
          class="bg-saumon hover:bg-saumon-hover text-black font-bold uppercase py-3 px-10 rounded-lg transition-colors duration-300 cursor-pointer"
        >
          Tout afficher
        </a>
      </div>
    </section>

    <section class="container mx-auto px-4 py-8">
      <header class="mb-16">
        <h2
          class="text-2xl !text-left font-raleway font-bold uppercase tracking-wider relative inline-block pb-4"
        >
          Recettes populaires
        </h2>
        <div class="w-full h-0.5 bg-black mt-2"></div>
      </header>
      <div
        class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-14 justify-items-center"
      >
        {popularRecipes.map((recette) => <CardRecettes recette={recette} />)}
      </div>
      <div class="flex justify-center mt-20">
        <a
          href="/site-applicatif/recettes"
          class="bg-jaune hover:bg-jaune-hover text-black font-bold uppercase py-3 px-10 rounded-lg transition-colors duration-300 cursor-pointer"
        >
          Tout afficher
        </a>
      </div>
    </section>
  </div>
</LayoutApplicatif>
