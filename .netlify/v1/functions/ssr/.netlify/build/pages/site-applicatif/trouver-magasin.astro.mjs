import { e as createComponent, i as renderComponent, r as renderTemplate, o as defineScriptVars, n as renderScript, m as maybeRenderHead } from '../../chunks/astro/server_UQsOWqpN.mjs';
import 'kleur/colors';
import { $ as $$LayoutApplicatif } from '../../chunks/LayoutApplicatif_tUxN7yFY.mjs';
import { o as getAllShops } from '../../chunks/backend_CFzKrOra.mjs';
/* empty css                                              */
export { renderers } from '../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$TrouverMagasin = createComponent(async ($$result, $$props, $$slots) => {
  const shops = await getAllShops();
  return renderTemplate`${renderComponent($$result, "LayoutApplicatif", $$LayoutApplicatif, { "title": "Trouver un magasin", "description": "Trouvez les magasins ASAFRAM pr\xE8s de chez vous", "data-astro-cid-g3bkqxyt": true }, { "default": async ($$result2) => renderTemplate(_a || (_a = __template(['  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="">  ', `<div class="main-container bg-gray-50" x-data="{ filtersOpen: true, selectedContinents: [], selectedCategories: [], searchQuery: '', selectedShopType: 'tous' }" data-astro-cid-g3bkqxyt> <!-- Bouton pour toggle les filtres - Position normale --> <div @click="filtersOpen = !filtersOpen" class="filter-toggle-btn bg-sable hover:bg-sable-hover text-black font-bold p-3 rounded-r-lg shadow-lg cursor-pointer" :class="filtersOpen ? 'shifted' : ''" data-astro-cid-g3bkqxyt> <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707v4.586a1 1 0 01-.293.707L9 19.414V14.414a1 1 0 00-.293-.707L2.293 7.293A1 1 0 012 6.586V4z" data-astro-cid-g3bkqxyt></path> </svg> </div> <!-- Sidebar des filtres - Vraiment fixe --> <div class="filter-sidebar bg-white shadow-lg border-r border-gray-200" :class="filtersOpen ? 'open' : ''" data-astro-cid-g3bkqxyt> <div class="h-full flex flex-col" data-astro-cid-g3bkqxyt> <div class="p-8 flex-1" data-astro-cid-g3bkqxyt> <!-- En-t\xEAte des filtres --> <div class="flex justify-between items-center mb-6" data-astro-cid-g3bkqxyt> <h2 class="!text-3xl font-raleway font-black uppercase text-black" data-astro-cid-g3bkqxyt>
FILTRES
</h2> <button @click="selectedContinents = []; selectedCategories = []; searchQuery = ''; selectedShopType = 'tous'" class="text-xs font-raleway border border-gray-600 px-4 py-1.5 rounded hover:bg-gray-100 transition-colors cursor-pointer" data-astro-cid-g3bkqxyt>
R\xC9INITIALISER
</button> </div> <!-- Ligne de s\xE9paration --> <div class="w-full border-t border-dashed border-black mb-6" data-astro-cid-g3bkqxyt></div> <!-- Section Continents --> <div class="mb-6" data-astro-cid-g3bkqxyt> <div class="flex justify-between items-center mb-4" data-astro-cid-g3bkqxyt> <h3 class="!text-2xl font-raleway font-bold uppercase text-black" data-astro-cid-g3bkqxyt>
CONTINENTS
</h3> <button @click="selectedContinents = ['Afrique', 'Am\xE9rique Latine', 'Asie', 'Maghreb']" class="text-xs font-raleway border border-gray-600 px-3 py-1 rounded hover:bg-gray-100 transition-colors cursor-pointer" :class="selectedContinents.length === 4 && selectedContinents.includes('Afrique') && selectedContinents.includes('Am\xE9rique Latine') && selectedContinents.includes('Asie') && selectedContinents.includes('Maghreb') ? 'bg-gray-200' : ''" data-astro-cid-g3bkqxyt>
TOUT
</button> </div> <div class="space-y-2" data-astro-cid-g3bkqxyt> <button @click="selectedContinents.includes('Afrique') ? (selectedContinents = selectedContinents.filter(c => c !== 'Afrique')) : selectedContinents.push('Afrique')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Afrique') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
AFRIQUE
</button> <button @click="selectedContinents.includes('Am\xE9rique Latine') ? (selectedContinents = selectedContinents.filter(c => c !== 'Am\xE9rique Latine')) : selectedContinents.push('Am\xE9rique Latine')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Am\xE9rique Latine') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
AM\xC9RIQUE LATINE
</button> <button @click="selectedContinents.includes('Asie') ? (selectedContinents = selectedContinents.filter(c => c !== 'Asie')) : selectedContinents.push('Asie')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Asie') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
ASIE
</button> <button @click="selectedContinents.includes('Maghreb') ? (selectedContinents = selectedContinents.filter(c => c !== 'Maghreb')) : selectedContinents.push('Maghreb')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Maghreb') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
MAGHREB
</button> </div> </div> <!-- Ligne de s\xE9paration --> <div class="w-full border-t border-dashed border-gray-400 mb-6" data-astro-cid-g3bkqxyt></div> <!-- Section Cat\xE9gories --> <div class="mb-6" data-astro-cid-g3bkqxyt> <div class="flex justify-between items-center mb-4" data-astro-cid-g3bkqxyt> <h3 class="!text-2xl font-raleway font-bold uppercase text-black" data-astro-cid-g3bkqxyt>
CAT\xC9GORIES
</h3> <button @click="selectedCategories = ['viande', 'snack', 'poisson', 'epices', 'fruit', 'sauces', 'feculent', 'boissons']" class="text-xs font-raleway border border-gray-600 px-3 py-1 rounded hover:bg-gray-100 transition-colors cursor-pointer" :class="selectedCategories.length === 8 && selectedCategories.includes('viande') && selectedCategories.includes('snack') && selectedCategories.includes('poisson') && selectedCategories.includes('epices') && selectedCategories.includes('fruit') && selectedCategories.includes('sauces') && selectedCategories.includes('feculent') && selectedCategories.includes('boissons') ? 'bg-gray-200' : ''" data-astro-cid-g3bkqxyt>
TOUT
</button> </div> <div class="grid grid-cols-2 gap-y-2 gap-x-4" data-astro-cid-g3bkqxyt> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="viande" @change="$event.target.checked ? selectedCategories.push('viande') : selectedCategories = selectedCategories.filter(c => c !== 'viande')" :checked="selectedCategories.includes('viande')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>VIANDE</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="snack" @change="$event.target.checked ? selectedCategories.push('snack') : selectedCategories = selectedCategories.filter(c => c !== 'snack')" :checked="selectedCategories.includes('snack')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>SNACK</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="poisson" @change="$event.target.checked ? selectedCategories.push('poisson') : selectedCategories = selectedCategories.filter(c => c !== 'poisson')" :checked="selectedCategories.includes('poisson')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>POISSON</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="epices" @change="$event.target.checked ? selectedCategories.push('epices') : selectedCategories = selectedCategories.filter(c => c !== 'epices')" :checked="selectedCategories.includes('epices')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>\xC9PICES</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="fruit" @change="$event.target.checked ? selectedCategories.push('fruit') : selectedCategories = selectedCategories.filter(c => c !== 'fruit')" :checked="selectedCategories.includes('fruit')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>FRUIT / L\xC9GUME</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="sauces" @change="$event.target.checked ? selectedCategories.push('sauces') : selectedCategories = selectedCategories.filter(c => c !== 'sauces')" :checked="selectedCategories.includes('sauces')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>SAUCES</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="feculent" @change="$event.target.checked ? selectedCategories.push('feculent') : selectedCategories = selectedCategories.filter(c => c !== 'feculent')" :checked="selectedCategories.includes('feculent')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>F\xC9CULENT</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="boissons" @change="$event.target.checked ? selectedCategories.push('boissons') : selectedCategories = selectedCategories.filter(c => c !== 'boissons')" :checked="selectedCategories.includes('boissons')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>BOISSONS</span> </label> </div> </div> <!-- Ligne de s\xE9paration --> <div class="w-full border-t border-dashed border-gray-400 mb-6" data-astro-cid-g3bkqxyt></div> <!-- Section Magasins --> <div data-astro-cid-g3bkqxyt> <h3 class="!text-2xl font-raleway font-bold uppercase mb-4 text-black" data-astro-cid-g3bkqxyt>
MAGASINS
</h3> <div class="relative" data-astro-cid-g3bkqxyt> <select class="w-full p-2.5 border border-gray-400 rounded-lg text-xs font-raleway bg-white appearance-none pr-8 cursor-pointer" x-model="selectedShopType" data-astro-cid-g3bkqxyt> <option value="tous" data-astro-cid-g3bkqxyt>Tous les magasins</option> <option value="Petite \xE9picerie" data-astro-cid-g3bkqxyt>Petite \xE9picerie</option> <option value="Magasin de taille moyenne" data-astro-cid-g3bkqxyt>Magasin de taille moyenne</option> <option value="Grande Surface" data-astro-cid-g3bkqxyt>Grande Surface</option> </select> <svg class="absolute right-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-black pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" data-astro-cid-g3bkqxyt></path> </svg> </div> </div> </div> </div> </div> <!-- Zone de la carte - Dans le flow normal de la page --> <div class="map-zone w-full relative" :class="filtersOpen ? 'shifted' : ''" style="height: calc(100vh - 160px); min-height: 600px;" data-astro-cid-g3bkqxyt> <!-- Carte --> <div id="map" class="w-full h-full" data-astro-cid-g3bkqxyt></div> </div> </div>  <div class="search-bar-fixed" x-data="{ searchQuery: '' }" data-astro-cid-g3bkqxyt> <div class="relative" data-astro-cid-g3bkqxyt> <input type="text" placeholder="CHERCHER UNE BOUTIQUE" class="w-80 px-4 py-3 border-2 border-gray-300 rounded-lg text-sm font-raleway focus:outline-none focus:border-saumon bg-white shadow-lg" x-model="searchQuery" data-astro-cid-g3bkqxyt> <!-- Loupe quand pas de texte --> <svg x-show="searchQuery === ''" class="absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" data-astro-cid-g3bkqxyt></path> </svg> <!-- Croix quand il y a du texte --> <button x-show="searchQuery !== ''" @click="searchQuery = ''; $nextTick(() => { const event = new Event('input'); $el.previousElementSibling.dispatchEvent(event); })" class="absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer transition-colors" title="Effacer la recherche" data-astro-cid-g3bkqxyt> <svg fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" data-astro-cid-g3bkqxyt></path> </svg> </button> </div> </div>  <div id="shop-details-panel" class="absolute top-60 right-4 bottom-4 w-80 z-[9999] bg-white rounded-xl shadow-2xl border border-gray-200 overflow-y-auto transition-all duration-300 ease-in-out opacity-0 translate-x-5 pointer-events-none" data-astro-cid-g3bkqxyt> <div class="p-5 relative" data-astro-cid-g3bkqxyt> <div id="shop-details-content-inner" data-astro-cid-g3bkqxyt> <!-- Le contenu sera inject\xE9 ici dynamiquement --> </div> </div> </div>  `, "  <script>(function(){", '\n    // Attendre que la page soit compl\xE8tement charg\xE9e\n    window.addEventListener("load", function () {\n      console.log("Initialisation de la carte...");\n\n      try {\n        // Cr\xE9er des ic\xF4nes personnalis\xE9es avec la couleur sable\n        const defaultIcon = L.icon({\n          iconUrl:\n            "data:image/svg+xml;base64," +\n            btoa(`\n            <svg width="25" height="41" viewBox="0 0 25 41" xmlns="http://www.w3.org/2000/svg">\n              <path d="M12.5 0C5.6 0 0 5.6 0 12.5c0 9.4 12.5 28.5 12.5 28.5s12.5-19.1 12.5-28.5C25 5.6 19.4 0 12.5 0z" fill="#E3B85C"/>\n              <circle cx="12.5" cy="12.5" r="6" fill="white"/>\n            </svg>\n          `),\n          shadowUrl:\n            "https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png",\n          iconSize: [25, 41],\n          iconAnchor: [12, 41],\n          popupAnchor: [1, -34],\n          shadowSize: [41, 41],\n        });\n\n        const selectedIcon = L.icon({\n          iconUrl:\n            "data:image/svg+xml;base64," +\n            btoa(`\n            <svg width="35" height="57" viewBox="0 0 35 57" xmlns="http://www.w3.org/2000/svg">\n              <path d="M17.5 0C7.8 0 0 7.8 0 17.5c0 13.1 17.5 39.5 17.5 39.5s17.5-26.4 17.5-39.5C35 7.8 27.2 0 17.5 0z" fill="#D4A853"/>\n              <circle cx="17.5" cy="17.5" r="8.5" fill="white"/>\n              <circle cx="17.5" cy="17.5" r="6" fill="#E3B85C"/>\n            </svg>\n          `),\n          shadowUrl:\n            "https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png",\n          iconSize: [35, 57],\n          iconAnchor: [17, 57],\n          popupAnchor: [1, -47],\n          shadowSize: [57, 57],\n          className: "selected-marker",\n        });\n\n        const foundIcon = L.icon({\n          iconUrl:\n            "data:image/svg+xml;base64," +\n            btoa(`\n            <svg width="30" height="49" viewBox="0 0 30 49" xmlns="http://www.w3.org/2000/svg">\n              <path d="M15 0C6.7 0 0 6.7 0 15c0 11.2 15 34 15 34s15-22.8 15-34C30 6.7 23.3 0 15 0z" fill="#E3B85C"/>\n              <circle cx="15" cy="15" r="7" fill="white"/>\n              <circle cx="15" cy="15" r="5" fill="#E3B85C"/>\n            </svg>\n          `),\n          shadowUrl:\n            "https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png",\n          iconSize: [30, 49],\n          iconAnchor: [15, 49],\n          popupAnchor: [1, -41],\n          shadowSize: [49, 49],\n          className: "found-marker",\n        });\n\n        // Cr\xE9ation de la carte centr\xE9e sur la France avec limites strictes\n        const map = L.map("map", {\n          scrollWheelZoom: false, // D\xE9sactiver le zoom molette normal\n          doubleClickZoom: true, // Garder le double-clic pour zoomer\n          boxZoom: true, // Garder la s\xE9lection pour zoomer\n          keyboard: true, // Garder les contr\xF4les clavier\n          minZoom: 2, // Zoom minimum mondial\n          maxZoom: 12, // R\xE9duire le zoom maximum \xE0 12 pour \xE9viter les zones grises\n          zoomControl: true, // Garder les contr\xF4les de zoom\n        });\n\n        // D\xE9sactiver explicitement le handler de scroll wheel de Leaflet\n        map.scrollWheelZoom.disable();\n\n        // Ajout de la couche de tuiles OpenStreetMap\n        L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {\n          maxZoom: 12, // R\xE9duire \xE0 12 pour \xE9viter les zones grises\n          attribution:\n            \'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>\',\n        }).addTo(map);\n\n        // Gestion du zoom avec CTRL + molette uniquement\n        map.getContainer().addEventListener(\n          "wheel",\n          function (e) {\n            if (e.ctrlKey) {\n              e.preventDefault();\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n\n              // D\xE9bogage pour comprendre le comportement\n              console.log("CTRL + Wheel Event:", {\n                deltaY: e.deltaY,\n                deltaX: e.deltaX,\n                deltaMode: e.deltaMode,\n                wheelDelta: e.wheelDelta,\n                wheelDeltaY: e.wheelDeltaY,\n                type: e.type,\n                ctrlKey: e.ctrlKey,\n                direction:\n                  e.deltaY > 0\n                    ? "down (should zoom out)"\n                    : "up (should zoom in)",\n              });\n\n              const currentZoom = map.getZoom();\n              // deltaY > 0 = scroll vers le bas = ZOOM OUT (-0.5)\n              // deltaY < 0 = scroll vers le haut = ZOOM IN (+0.5)\n              const zoomChange = e.deltaY > 0 ? -0.5 : 0.5;\n              const newZoom = Math.max(\n                map.getMinZoom(),\n                Math.min(map.getMaxZoom(), currentZoom + zoomChange)\n              );\n\n              console.log("Zoom:", {\n                currentZoom: currentZoom,\n                zoomChange: zoomChange,\n                newZoom: newZoom,\n                applied: newZoom !== currentZoom,\n              });\n\n              const rect = map.getContainer().getBoundingClientRect();\n              const x = e.clientX - rect.left;\n              const y = e.clientY - rect.top;\n              const containerPoint = L.point(x, y);\n              const latLng = map.containerPointToLatLng(containerPoint);\n\n              map.setZoomAround(latLng, newZoom);\n\n              return false;\n            }\n          },\n          { passive: false, capture: true }\n        );\n\n        // Essayer aussi de capturer l\'\xE9v\xE9nement directement sur le document\n        document.addEventListener(\n          "wheel",\n          function (e) {\n            if (e.ctrlKey && e.target && e.target.closest("#map")) {\n              console.log("Document wheel event (backup):", {\n                deltaY: e.deltaY,\n                target: e.target,\n                isMapTarget: !!e.target.closest("#map"),\n              });\n            }\n          },\n          { passive: false, capture: true }\n        );\n\n        // Centrer directement sur Paris avec un zoom pr\xE9cis\n        map.setView([47.8567, 5.3522], 6.5);\n\n        // Forcer le redimensionnement initial de la carte\n        setTimeout(() => {\n          map.invalidateSize();\n          // Recentrer apr\xE8s le redimensionnement initial\n          map.setView([47.8567, 5.3522], 6.5);\n        }, 200);\n\n        console.log("Carte limit\xE9e \xE0 la France initialis\xE9e avec succ\xE8s");\n\n        // Fonction de g\xE9ocodage avec Nominatim (OpenStreetMap)\n        async function geocodeAddress(address) {\n          try {\n            const response = await fetch(\n              `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address + ", France")}&limit=1&countrycodes=fr`\n            );\n            const data = await response.json();\n            if (data && data.length > 0) {\n              return {\n                lat: parseFloat(data[0].lat),\n                lng: parseFloat(data[0].lon),\n                success: true,\n              };\n            }\n            return { success: false };\n          } catch (error) {\n            console.error("Erreur g\xE9ocodage pour", address, ":", error);\n            return { success: false };\n          }\n        }\n\n        // Fonction pour cr\xE9er le contenu HTML du popup\n        function createPopupContent(shop) {\n          let imageHtml = "";\n          if (shop.img && shop.img.length > 0) {\n            imageHtml = `<img src="${shop.img}" alt="${shop.nom}" class="w-full h-40 object-cover">`;\n          }\n\n          let continentHtml = "";\n          if (\n            shop.expand &&\n            shop.expand.continent &&\n            shop.expand.continent.length > 0\n          ) {\n            const continents = shop.expand.continent\n              .map((c) => c.nom || c)\n              .join(", ");\n            continentHtml = `\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F30D}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">${continents}</div>\n              </div>\n            `;\n          } else if (shop.continent) {\n            continentHtml = `\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F30D}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">${shop.continent}</div>\n              </div>\n            `;\n          }\n\n          let siteWebHtml = "";\n          if (shop.site_web) {\n            siteWebHtml = `\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F310}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\n                  <a href="${shop.site_web}" target="_blank" rel="noopener" class="text-red-500 hover:underline font-medium">${shop.site_web}</a>\n                </div>\n              </div>\n            `;\n          }\n\n          let horaireHtml = "";\n          if (shop.horaire) {\n            horaireHtml = `\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F552}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">${shop.horaire}</div>\n              </div>\n            `;\n          }\n\n          let telephoneHtml = "";\n          if (shop.telephone) {\n            telephoneHtml = `\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F4DE}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\n                  <a href="tel:${shop.telephone}" class="text-red-500 hover:underline font-medium">${shop.telephone}</a>\n                </div>\n              </div>\n            `;\n          }\n\n          let adresseHtml = "";\n          if (shop.adresse) {\n            adresseHtml = `\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F4CD}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">${shop.adresse}</div>\n              </div>\n            `;\n          }\n\n          let descriptionHtml = "";\n          if (shop.description) {\n            descriptionHtml = `\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u2139\uFE0F</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">${shop.description}</div>\n              </div>\n            `;\n          }\n\n          return `\n            ${imageHtml}\n            <h2 class="!text-lg font-bold text-gray-800 mb-3 font-raleway">${shop.nom}</h2>\n            ${adresseHtml}\n            ${telephoneHtml}\n            ${horaireHtml}\n            ${siteWebHtml}\n            ${continentHtml}\n            ${descriptionHtml}\n          `;\n        }\n\n        // Fonction pour afficher les d\xE9tails d\'une boutique dans le panneau\n        function showShopDetails(shop) {\n          const panel = document.getElementById("shop-details-panel");\n          const content = document.getElementById("shop-details-content-inner");\n\n          if (panel && content) {\n            content.innerHTML = createPopupContent(shop);\n            panel.classList.remove(\n              "opacity-0",\n              "translate-x-5",\n              "pointer-events-none"\n            );\n            panel.classList.add(\n              "opacity-100",\n              "translate-x-0",\n              "pointer-events-auto"\n            );\n\n            // Forcer le redimensionnement de la carte apr\xE8s l\'ouverture du panneau\n            setTimeout(() => {\n              map.invalidateSize();\n            }, 350); // Apr\xE8s la transition du panneau\n          }\n        }\n\n        // Fonction pour masquer le panneau de d\xE9tails\n        function hideShopDetails() {\n          const panel = document.getElementById("shop-details-panel");\n          if (panel) {\n            panel.classList.remove(\n              "opacity-100",\n              "translate-x-0",\n              "pointer-events-auto"\n            );\n            panel.classList.add(\n              "opacity-0",\n              "translate-x-5",\n              "pointer-events-none"\n            );\n\n            // Forcer le redimensionnement de la carte apr\xE8s la fermeture du panneau\n            setTimeout(() => {\n              map.invalidateSize();\n            }, 350); // Apr\xE8s la transition du panneau\n          }\n        }\n\n        // Variable pour stocker tous les marqueurs avec leurs donn\xE9es\n        let shopsMarkers = [];\n        let allShopsData = [];\n        let selectedMarker = null;\n\n        // Fonction pour r\xE9initialiser tous les marqueurs au style par d\xE9faut\n        function resetAllMarkers() {\n          shopsMarkers.forEach((markerData) => {\n            markerData.marker.setIcon(defaultIcon);\n          });\n          selectedMarker = null;\n        }\n\n        // Fonction pour s\xE9lectionner un marqueur sp\xE9cifique\n        function selectMarker(markerData, shouldZoom = false) {\n          // R\xE9initialiser tous les marqueurs d\'abord\n          resetAllMarkers();\n\n          // Appliquer le style s\xE9lectionn\xE9\n          markerData.marker.setIcon(selectedIcon);\n          selectedMarker = markerData;\n\n          // Ouvrir le panneau de d\xE9tails\n          showShopDetails(markerData.shop);\n\n          // Forcer le redimensionnement de la carte pour \xE9viter les probl\xE8mes d\'affichage\n          setTimeout(() => {\n            map.invalidateSize();\n          }, 100);\n\n          // Centrer la vue sur le marqueur avec ou sans zoom selon le contexte\n          setTimeout(() => {\n            const markerLatLng = markerData.marker.getLatLng();\n\n            if (shouldZoom) {\n              // Recherche : zoom + centrage + d\xE9calage\n              const currentZoom = map.getZoom();\n              const targetZoom = Math.min(Math.max(currentZoom, 9), 11);\n\n              console.log(\n                `\u{1F50D} Recherche - Zoom de ${currentZoom} vers ${targetZoom}`\n              );\n\n              // 1. Centrer avec zoom\n              map.setView(markerLatLng, targetZoom, {\n                animate: true,\n                duration: 0.6,\n              });\n\n              // 2. D\xE9caler apr\xE8s zoom\n              setTimeout(() => {\n                map.panBy([168, 0], {\n                  animate: true,\n                  duration: 0.4,\n                });\n              }, 650);\n            } else {\n              // Clic direct : juste centrage + d\xE9calage (pas de zoom)\n              console.log(`\u{1F5B1}\uFE0F Clic direct - Centrage sans zoom`);\n\n              // Calculer le centre visuel en tenant compte du panneau lat\xE9ral\n              // Le panneau fait 320px, donc la zone visible est r\xE9duite\n              const mapContainer = map.getContainer();\n              const mapWidth = mapContainer.offsetWidth;\n              const panelWidth = 320; // Largeur du panneau\n\n              // Le centre visuel devrait \xEAtre d\xE9cal\xE9 vers la gauche\n              const visualCenterOffsetX = -panelWidth / 2; // -160px vers la gauche\n\n              // Convertir le marqueur en point pixel\n              const markerPoint = map.latLngToContainerPoint(markerLatLng);\n\n              // Calculer le point central visuel\n              const visualCenterX = mapWidth / 2 + visualCenterOffsetX;\n              const visualCenterY = mapContainer.offsetHeight / 2;\n\n              // Calculer le d\xE9calage n\xE9cessaire\n              const deltaX = markerPoint.x - visualCenterX;\n              const deltaY = markerPoint.y - visualCenterY;\n\n              console.log(`D\xE9calage corrig\xE9: ${deltaX}px, ${deltaY}px`);\n\n              // Utiliser seulement panBy pour d\xE9placer la vue (pas de zoom du tout)\n              map.panBy([deltaX, deltaY], {\n                animate: true,\n                duration: 0.5,\n              });\n            }\n\n            // Invalidation finale\n            setTimeout(() => {\n              map.invalidateSize();\n            }, 1100);\n          }, 150);\n\n          console.log(\n            `\u2705 Marqueur s\xE9lectionn\xE9: ${markerData.shop.nom} (zoom: ${shouldZoom})`\n          );\n        }\n\n        // Fonction de recherche et filtrage des marqueurs am\xE9lior\xE9e\n        function filterShopsBySearch(searchTerm) {\n          const searchLower = searchTerm.toLowerCase().trim();\n\n          if (searchLower === "") {\n            // Afficher tous les marqueurs et r\xE9initialiser les styles\n            resetAllMarkers();\n            shopsMarkers.forEach((markerData) => {\n              if (!map.hasLayer(markerData.marker)) {\n                map.addLayer(markerData.marker);\n              }\n            });\n\n            // Masquer le panneau de d\xE9tails\n            hideShopDetails();\n\n            // Ajuster la vue pour montrer tous les marqueurs\n            if (shopsMarkers.length > 0) {\n              const group = new L.featureGroup(\n                shopsMarkers.map((m) => m.marker)\n              );\n              map.fitBounds(group.getBounds().pad(0.1));\n            }\n            return;\n          }\n\n          // R\xE9initialiser les styles avant de filtrer\n          resetAllMarkers();\n\n          // Filtrer les marqueurs selon le nom de la boutique\n          const matchingMarkers = [];\n\n          shopsMarkers.forEach((markerData) => {\n            const shopName = markerData.shop.nom.toLowerCase();\n\n            if (shopName.includes(searchLower)) {\n              // Afficher le marqueur avec le style "trouv\xE9"\n              if (!map.hasLayer(markerData.marker)) {\n                map.addLayer(markerData.marker);\n              }\n              markerData.marker.setIcon(foundIcon);\n              matchingMarkers.push(markerData);\n            } else {\n              // Masquer le marqueur s\'il ne correspond pas\n              if (map.hasLayer(markerData.marker)) {\n                map.removeLayer(markerData.marker);\n              }\n            }\n          });\n\n          // Logique de s\xE9lection intelligente\n          if (matchingMarkers.length === 1) {\n            // 1 seul r\xE9sultat \u2192 S\xE9lection automatique avec zoom\n            console.log(\n              `\u{1F3AF} 1 r\xE9sultat trouv\xE9, s\xE9lection automatique avec zoom`\n            );\n            selectMarker(matchingMarkers[0], true); // Recherche = avec zoom\n          } else if (\n            matchingMarkers.length > 1 &&\n            matchingMarkers.length <= 3\n          ) {\n            // 2-3 r\xE9sultats \u2192 Zoomer et proposer la s\xE9lection du premier si recherche tr\xE8s pr\xE9cise\n            const exactMatches = matchingMarkers.filter(\n              (markerData) => markerData.shop.nom.toLowerCase() === searchLower\n            );\n\n            if (exactMatches.length === 1) {\n              // Correspondance exacte trouv\xE9e avec zoom\n              console.log(`\u{1F3AF} Correspondance exacte trouv\xE9e avec zoom`);\n              selectMarker(exactMatches[0], true); // Recherche = avec zoom\n            } else {\n              // Plusieurs r\xE9sultats, juste zoomer\n              const group = new L.featureGroup(\n                matchingMarkers.map((m) => m.marker)\n              );\n              map.fitBounds(group.getBounds().pad(0.2));\n              hideShopDetails();\n              console.log(`\u{1F4CD} ${matchingMarkers.length} r\xE9sultats trouv\xE9s`);\n            }\n          } else if (matchingMarkers.length > 3) {\n            // Beaucoup de r\xE9sultats \u2192 Juste zoomer\n            const group = new L.featureGroup(\n              matchingMarkers.map((m) => m.marker)\n            );\n            map.fitBounds(group.getBounds().pad(0.2));\n            hideShopDetails();\n            console.log(`\u{1F4CD} ${matchingMarkers.length} r\xE9sultats trouv\xE9s`);\n          } else {\n            // Aucun r\xE9sultat trouv\xE9\n            hideShopDetails();\n            console.log(`\u274C Aucune boutique trouv\xE9e pour "${searchTerm}"`);\n          }\n        }\n\n        // Initialiser la recherche apr\xE8s chargement de la page\n        function initializeSearch() {\n          // Essayer plusieurs s\xE9lecteurs pour trouver le bon champ de recherche\n          let searchInput = document.querySelector(\n            \'input[placeholder="CHERCHER UNE BOUTIQUE"]\'\n          );\n\n          if (!searchInput) {\n            // Fallback avec un s\xE9lecteur plus large\n            searchInput = document.querySelector(\'input[type="text"]\');\n          }\n\n          if (!searchInput) {\n            // Dernier fallback avec x-model\n            searchInput = document.querySelector(\'[x-model="searchQuery"]\');\n          }\n\n          if (searchInput) {\n            // Nettoyer les anciens gestionnaires d\'\xE9v\xE9nements\n            searchInput.removeEventListener("input", handleSearch);\n            searchInput.removeEventListener("keyup", handleSearch);\n\n            // Fonction de gestion de la recherche\n            function handleSearch(e) {\n              const searchTerm = e.target.value;\n              console.log("Recherche:", searchTerm);\n              filterShopsBySearch(searchTerm);\n            }\n\n            // Ajouter les nouveaux gestionnaires\n            searchInput.addEventListener("input", handleSearch);\n            searchInput.addEventListener("keyup", handleSearch);\n\n            console.log("\u2705 Recherche initialis\xE9e avec succ\xE8s");\n            console.log("Champ trouv\xE9:", searchInput);\n          } else {\n            console.error("\u274C Champ de recherche non trouv\xE9");\n            // R\xE9essayer apr\xE8s un d\xE9lai\n            setTimeout(initializeSearch, 500);\n          }\n        }\n\n        // Fonctions de filtrage par les filtres de la sidebar\n        function filterShopsByFilters() {\n          // R\xE9cup\xE9rer les valeurs des filtres depuis les \xE9l\xE9ments DOM\n          const selectedContinents = getSelectedContinents();\n          const selectedCategories = getSelectedCategories();\n          const selectedShopType = getSelectedShopType();\n\n          console.log("\u{1F527} Filtres appliqu\xE9s:", {\n            continents: selectedContinents,\n            categories: selectedCategories,\n            taille: selectedShopType,\n          });\n\n          // R\xE9initialiser tous les marqueurs\n          resetAllMarkers();\n\n          // Parcourir tous les marqueurs et appliquer les filtres\n          shopsMarkers.forEach((markerData) => {\n            let showMarker = true;\n            const shop = markerData.shop;\n\n            // Filtre par continent\n            if (selectedContinents.length > 0) {\n              const shopContinents = Array.isArray(shop.continent)\n                ? shop.continent\n                : [shop.continent];\n              const hasMatchingContinent = shopContinents.some((continent) =>\n                selectedContinents.includes(continent)\n              );\n              if (!hasMatchingContinent) {\n                showMarker = false;\n              }\n            }\n\n            // Filtre par cat\xE9gories\n            if (selectedCategories.length > 0) {\n              const shopCategories = Array.isArray(shop.categorie)\n                ? shop.categorie\n                : [shop.categorie];\n              const hasMatchingCategory = shopCategories.some((category) =>\n                selectedCategories.includes(category)\n              );\n              if (!hasMatchingCategory) {\n                showMarker = false;\n              }\n            }\n\n            // Filtre par taille de magasin\n            if (selectedShopType !== "tous") {\n              if (shop.taille !== selectedShopType) {\n                showMarker = false;\n              }\n            }\n\n            // Afficher ou masquer le marqueur\n            if (showMarker) {\n              if (!map.hasLayer(markerData.marker)) {\n                map.addLayer(markerData.marker);\n              }\n            } else {\n              if (map.hasLayer(markerData.marker)) {\n                map.removeLayer(markerData.marker);\n              }\n            }\n          });\n\n          // Masquer le panneau de d\xE9tails si aucun marqueur n\'est s\xE9lectionn\xE9\n          const visibleMarkers = shopsMarkers.filter((markerData) =>\n            map.hasLayer(markerData.marker)\n          );\n\n          if (visibleMarkers.length === 0) {\n            hideShopDetails();\n            console.log(\n              "\u274C Aucune boutique ne correspond aux filtres s\xE9lectionn\xE9s"\n            );\n          } else {\n            console.log(\n              `\u2705 ${visibleMarkers.length} boutiques correspondent aux filtres`\n            );\n\n            // Ajuster la vue pour montrer les marqueurs visibles\n            if (visibleMarkers.length > 0) {\n              const group = new L.featureGroup(\n                visibleMarkers.map((m) => m.marker)\n              );\n              map.fitBounds(group.getBounds().pad(0.1));\n            }\n          }\n        }\n\n        // Fonctions utilitaires pour r\xE9cup\xE9rer les valeurs des filtres\n        function getSelectedContinents() {\n          // R\xE9cup\xE9rer les continents s\xE9lectionn\xE9s en regardant les boutons actifs\n          const continentButtons = document.querySelectorAll(\n            \'button[class*="bg-jaune"]\'\n          );\n          const selected = [];\n\n          continentButtons.forEach((button) => {\n            const text = button.textContent.trim();\n            if (text === "AFRIQUE") selected.push("Afrique");\n            else if (text === "AM\xC9RIQUE LATINE")\n              selected.push("Am\xE9rique Latine");\n            else if (text === "ASIE") selected.push("Asie");\n            else if (text === "MAGHREB") selected.push("Maghreb");\n          });\n\n          return selected;\n        }\n\n        function getSelectedCategories() {\n          // R\xE9cup\xE9rer les cat\xE9gories coch\xE9es\n          const categoryCheckboxes = document.querySelectorAll(\n            \'input[type="checkbox"]:checked\'\n          );\n          const selected = [];\n\n          categoryCheckboxes.forEach((checkbox) => {\n            selected.push(checkbox.value);\n          });\n\n          return selected;\n        }\n\n        function getSelectedShopType() {\n          // R\xE9cup\xE9rer la taille de magasin s\xE9lectionn\xE9e\n          const shopTypeSelect = document.querySelector(\n            \'select[x-model="selectedShopType"]\'\n          );\n          return shopTypeSelect ? shopTypeSelect.value : "tous";\n        }\n\n        // Initialiser les \xE9couteurs de filtres\n        function initializeFilters() {\n          console.log("\u{1F4CB} Initialisation des filtres...");\n\n          // Observer les clics sur les boutons de continent\n          document.addEventListener("click", (event) => {\n            if (\n              event.target.closest("button") &&\n              (event.target.textContent.includes("AFRIQUE") ||\n                event.target.textContent.includes("AM\xC9RIQUE LATINE") ||\n                event.target.textContent.includes("ASIE") ||\n                event.target.textContent.includes("MAGHREB") ||\n                event.target.textContent.includes("TOUS"))\n            ) {\n              setTimeout(filterShopsByFilters, 100);\n            }\n          });\n\n          // Observer les changements sur les checkboxes de cat\xE9gories\n          document.addEventListener("change", (event) => {\n            if (event.target.type === "checkbox") {\n              setTimeout(filterShopsByFilters, 50);\n            }\n          });\n\n          // Observer les changements sur le select de taille\n          document.addEventListener("change", (event) => {\n            if (event.target.tagName === "SELECT") {\n              setTimeout(filterShopsByFilters, 50);\n            }\n          });\n\n          // Observer le bouton de r\xE9initialisation\n          document.addEventListener("click", (event) => {\n            if (event.target.textContent.includes("R\xC9INITIALISER")) {\n              setTimeout(filterShopsByFilters, 150);\n            }\n          });\n\n          console.log("\u2705 Filtres initialis\xE9s avec succ\xE8s");\n        }\n\n        // Fonction pour afficher les boutiques sur la carte\n        async function displayShopsOnMap() {\n          console.log("D\xE9but du g\xE9ocodage des boutiques...");\n          console.log("Donn\xE9es boutiques re\xE7ues:", shops);\n\n          // Nettoyer les marqueurs existants\n          shopsMarkers.forEach((markerData) =>\n            map.removeLayer(markerData.marker)\n          );\n          shopsMarkers = [];\n          allShopsData = [];\n\n          let successCount = 0;\n          let errorCount = 0;\n\n          for (const shop of shops) {\n            if (!shop.adresse) {\n              console.warn("Pas d\'adresse pour la boutique:", shop.nom);\n              errorCount++;\n              continue;\n            }\n\n            console.log(`G\xE9ocodage de: ${shop.nom} - ${shop.adresse}`);\n\n            const coords = await geocodeAddress(shop.adresse);\n\n            if (coords.success) {\n              // Cr\xE9er le marqueur avec l\'ic\xF4ne par d\xE9faut\n              const marker = L.marker([coords.lat, coords.lng], {\n                icon: defaultIcon,\n              }).addTo(map);\n\n              // Ajouter un gestionnaire de clic pour s\xE9lectionner le marqueur\n              marker.on("click", function () {\n                const markerData = shopsMarkers.find(\n                  (m) => m.marker === marker\n                );\n                if (markerData) {\n                  selectMarker(markerData, false); // Clic direct = pas de zoom\n                }\n              });\n\n              // Stocker les donn\xE9es du marqueur et de la boutique\n              const markerData = {\n                marker: marker,\n                shop: shop,\n                coords: coords,\n              };\n\n              shopsMarkers.push(markerData);\n              allShopsData.push(shop);\n              successCount++;\n\n              console.log(`\u2705 ${shop.nom} ajout\xE9 \xE0 la carte`);\n            } else {\n              console.error(\n                `\u274C Impossible de g\xE9ocoder: ${shop.nom} - ${shop.adresse}`\n              );\n              errorCount++;\n            }\n\n            // Petite pause pour \xE9viter de surcharger l\'API\n            await new Promise((resolve) => setTimeout(resolve, 100));\n          }\n\n          console.log(\n            `G\xE9ocodage termin\xE9: ${successCount} succ\xE8s, ${errorCount} erreurs`\n          );\n\n          // Ajuster la vue pour montrer tous les marqueurs si on en a\n          if (shopsMarkers.length > 0) {\n            const group = new L.featureGroup(shopsMarkers.map((m) => m.marker));\n            map.fitBounds(group.getBounds().pad(0.1));\n          }\n\n          // Initialiser la recherche apr\xE8s avoir charg\xE9 tous les marqueurs\n          initializeSearch();\n\n          // Initialiser les filtres\n          initializeFilters();\n\n          // R\xE9essayer l\'initialisation apr\xE8s un d\xE9lai pour Alpine.js\n          setTimeout(() => {\n            initializeSearch();\n            initializeFilters();\n          }, 1000);\n        }\n\n        // Lancer l\'affichage des boutiques\n        displayShopsOnMap();\n\n        // Ajouter un gestionnaire de redimensionnement pour maintenir la carte en bon \xE9tat\n        window.addEventListener("resize", function () {\n          setTimeout(() => {\n            map.invalidateSize();\n          }, 100);\n        });\n\n        // Invalidation suppl\xE9mentaire apr\xE8s un d\xE9lai pour s\'assurer que tout est bien affich\xE9\n        setTimeout(() => {\n          map.invalidateSize();\n          console.log("Carte redimensionn\xE9e - initialisation termin\xE9e");\n\n          // Derni\xE8re tentative d\'initialisation de la recherche\n          initializeSearch();\n        }, 1000);\n\n        // Ajouter un message d\'information au centre de la France\n        L.popup()\n          .setLatLng([46.603354, 1.888334])\n          .setContent(\n            \'<div style="text-align: center; font-family: Raleway;"><b>Magasins ASAFRAM</b><br>Trouvez nos points de vente en France<br><small>Chargement des boutiques en cours...</small></div>\'\n          )\n          .openOn(map);\n      } catch (error) {\n        console.error("Erreur lors de l\'initialisation de la carte:", error);\n        // Afficher un message d\'erreur \xE0 l\'utilisateur\n        const mapElement = document.getElementById("map");\n        if (mapElement) {\n          mapElement.innerHTML =\n            \'<div style="display: flex; align-items: center; justify-content: center; height: 100%; background: #f0f0f0; color: #666; font-family: Raleway;"><p>Impossible de charger la carte. Veuillez rafra\xEEchir la page.</p></div>\';\n        }\n      }\n    });\n  })();<\/script> <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer><\/script> '], ['  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="">  ', `<div class="main-container bg-gray-50" x-data="{ filtersOpen: true, selectedContinents: [], selectedCategories: [], searchQuery: '', selectedShopType: 'tous' }" data-astro-cid-g3bkqxyt> <!-- Bouton pour toggle les filtres - Position normale --> <div @click="filtersOpen = !filtersOpen" class="filter-toggle-btn bg-sable hover:bg-sable-hover text-black font-bold p-3 rounded-r-lg shadow-lg cursor-pointer" :class="filtersOpen ? 'shifted' : ''" data-astro-cid-g3bkqxyt> <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707v4.586a1 1 0 01-.293.707L9 19.414V14.414a1 1 0 00-.293-.707L2.293 7.293A1 1 0 012 6.586V4z" data-astro-cid-g3bkqxyt></path> </svg> </div> <!-- Sidebar des filtres - Vraiment fixe --> <div class="filter-sidebar bg-white shadow-lg border-r border-gray-200" :class="filtersOpen ? 'open' : ''" data-astro-cid-g3bkqxyt> <div class="h-full flex flex-col" data-astro-cid-g3bkqxyt> <div class="p-8 flex-1" data-astro-cid-g3bkqxyt> <!-- En-t\xEAte des filtres --> <div class="flex justify-between items-center mb-6" data-astro-cid-g3bkqxyt> <h2 class="!text-3xl font-raleway font-black uppercase text-black" data-astro-cid-g3bkqxyt>
FILTRES
</h2> <button @click="selectedContinents = []; selectedCategories = []; searchQuery = ''; selectedShopType = 'tous'" class="text-xs font-raleway border border-gray-600 px-4 py-1.5 rounded hover:bg-gray-100 transition-colors cursor-pointer" data-astro-cid-g3bkqxyt>
R\xC9INITIALISER
</button> </div> <!-- Ligne de s\xE9paration --> <div class="w-full border-t border-dashed border-black mb-6" data-astro-cid-g3bkqxyt></div> <!-- Section Continents --> <div class="mb-6" data-astro-cid-g3bkqxyt> <div class="flex justify-between items-center mb-4" data-astro-cid-g3bkqxyt> <h3 class="!text-2xl font-raleway font-bold uppercase text-black" data-astro-cid-g3bkqxyt>
CONTINENTS
</h3> <button @click="selectedContinents = ['Afrique', 'Am\xE9rique Latine', 'Asie', 'Maghreb']" class="text-xs font-raleway border border-gray-600 px-3 py-1 rounded hover:bg-gray-100 transition-colors cursor-pointer" :class="selectedContinents.length === 4 && selectedContinents.includes('Afrique') && selectedContinents.includes('Am\xE9rique Latine') && selectedContinents.includes('Asie') && selectedContinents.includes('Maghreb') ? 'bg-gray-200' : ''" data-astro-cid-g3bkqxyt>
TOUT
</button> </div> <div class="space-y-2" data-astro-cid-g3bkqxyt> <button @click="selectedContinents.includes('Afrique') ? (selectedContinents = selectedContinents.filter(c => c !== 'Afrique')) : selectedContinents.push('Afrique')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Afrique') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
AFRIQUE
</button> <button @click="selectedContinents.includes('Am\xE9rique Latine') ? (selectedContinents = selectedContinents.filter(c => c !== 'Am\xE9rique Latine')) : selectedContinents.push('Am\xE9rique Latine')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Am\xE9rique Latine') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
AM\xC9RIQUE LATINE
</button> <button @click="selectedContinents.includes('Asie') ? (selectedContinents = selectedContinents.filter(c => c !== 'Asie')) : selectedContinents.push('Asie')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Asie') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
ASIE
</button> <button @click="selectedContinents.includes('Maghreb') ? (selectedContinents = selectedContinents.filter(c => c !== 'Maghreb')) : selectedContinents.push('Maghreb')" class="px-4 py-1.5 rounded text-xs font-raleway font-bold uppercase transition-colors cursor-pointer" :class="selectedContinents.includes('Maghreb') ? 'bg-jaune text-black' : 'bg-white text-black border border-black'" data-astro-cid-g3bkqxyt>
MAGHREB
</button> </div> </div> <!-- Ligne de s\xE9paration --> <div class="w-full border-t border-dashed border-gray-400 mb-6" data-astro-cid-g3bkqxyt></div> <!-- Section Cat\xE9gories --> <div class="mb-6" data-astro-cid-g3bkqxyt> <div class="flex justify-between items-center mb-4" data-astro-cid-g3bkqxyt> <h3 class="!text-2xl font-raleway font-bold uppercase text-black" data-astro-cid-g3bkqxyt>
CAT\xC9GORIES
</h3> <button @click="selectedCategories = ['viande', 'snack', 'poisson', 'epices', 'fruit', 'sauces', 'feculent', 'boissons']" class="text-xs font-raleway border border-gray-600 px-3 py-1 rounded hover:bg-gray-100 transition-colors cursor-pointer" :class="selectedCategories.length === 8 && selectedCategories.includes('viande') && selectedCategories.includes('snack') && selectedCategories.includes('poisson') && selectedCategories.includes('epices') && selectedCategories.includes('fruit') && selectedCategories.includes('sauces') && selectedCategories.includes('feculent') && selectedCategories.includes('boissons') ? 'bg-gray-200' : ''" data-astro-cid-g3bkqxyt>
TOUT
</button> </div> <div class="grid grid-cols-2 gap-y-2 gap-x-4" data-astro-cid-g3bkqxyt> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="viande" @change="$event.target.checked ? selectedCategories.push('viande') : selectedCategories = selectedCategories.filter(c => c !== 'viande')" :checked="selectedCategories.includes('viande')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>VIANDE</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="snack" @change="$event.target.checked ? selectedCategories.push('snack') : selectedCategories = selectedCategories.filter(c => c !== 'snack')" :checked="selectedCategories.includes('snack')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>SNACK</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="poisson" @change="$event.target.checked ? selectedCategories.push('poisson') : selectedCategories = selectedCategories.filter(c => c !== 'poisson')" :checked="selectedCategories.includes('poisson')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>POISSON</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="epices" @change="$event.target.checked ? selectedCategories.push('epices') : selectedCategories = selectedCategories.filter(c => c !== 'epices')" :checked="selectedCategories.includes('epices')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>\xC9PICES</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="fruit" @change="$event.target.checked ? selectedCategories.push('fruit') : selectedCategories = selectedCategories.filter(c => c !== 'fruit')" :checked="selectedCategories.includes('fruit')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>FRUIT / L\xC9GUME</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="sauces" @change="$event.target.checked ? selectedCategories.push('sauces') : selectedCategories = selectedCategories.filter(c => c !== 'sauces')" :checked="selectedCategories.includes('sauces')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>SAUCES</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="feculent" @change="$event.target.checked ? selectedCategories.push('feculent') : selectedCategories = selectedCategories.filter(c => c !== 'feculent')" :checked="selectedCategories.includes('feculent')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>F\xC9CULENT</span> </label> <label class="flex items-center cursor-pointer" data-astro-cid-g3bkqxyt> <input type="checkbox" class="mr-2 w-4 h-4 border-2 border-black rounded-none cursor-pointer" value="boissons" @change="$event.target.checked ? selectedCategories.push('boissons') : selectedCategories = selectedCategories.filter(c => c !== 'boissons')" :checked="selectedCategories.includes('boissons')" data-astro-cid-g3bkqxyt> <span class="text-xs font-raleway text-black uppercase" data-astro-cid-g3bkqxyt>BOISSONS</span> </label> </div> </div> <!-- Ligne de s\xE9paration --> <div class="w-full border-t border-dashed border-gray-400 mb-6" data-astro-cid-g3bkqxyt></div> <!-- Section Magasins --> <div data-astro-cid-g3bkqxyt> <h3 class="!text-2xl font-raleway font-bold uppercase mb-4 text-black" data-astro-cid-g3bkqxyt>
MAGASINS
</h3> <div class="relative" data-astro-cid-g3bkqxyt> <select class="w-full p-2.5 border border-gray-400 rounded-lg text-xs font-raleway bg-white appearance-none pr-8 cursor-pointer" x-model="selectedShopType" data-astro-cid-g3bkqxyt> <option value="tous" data-astro-cid-g3bkqxyt>Tous les magasins</option> <option value="Petite \xE9picerie" data-astro-cid-g3bkqxyt>Petite \xE9picerie</option> <option value="Magasin de taille moyenne" data-astro-cid-g3bkqxyt>Magasin de taille moyenne</option> <option value="Grande Surface" data-astro-cid-g3bkqxyt>Grande Surface</option> </select> <svg class="absolute right-2 top-1/2 transform -translate-y-1/2 w-3 h-3 text-black pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" data-astro-cid-g3bkqxyt></path> </svg> </div> </div> </div> </div> </div> <!-- Zone de la carte - Dans le flow normal de la page --> <div class="map-zone w-full relative" :class="filtersOpen ? 'shifted' : ''" style="height: calc(100vh - 160px); min-height: 600px;" data-astro-cid-g3bkqxyt> <!-- Carte --> <div id="map" class="w-full h-full" data-astro-cid-g3bkqxyt></div> </div> </div>  <div class="search-bar-fixed" x-data="{ searchQuery: '' }" data-astro-cid-g3bkqxyt> <div class="relative" data-astro-cid-g3bkqxyt> <input type="text" placeholder="CHERCHER UNE BOUTIQUE" class="w-80 px-4 py-3 border-2 border-gray-300 rounded-lg text-sm font-raleway focus:outline-none focus:border-saumon bg-white shadow-lg" x-model="searchQuery" data-astro-cid-g3bkqxyt> <!-- Loupe quand pas de texte --> <svg x-show="searchQuery === ''" class="absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" data-astro-cid-g3bkqxyt></path> </svg> <!-- Croix quand il y a du texte --> <button x-show="searchQuery !== ''" @click="searchQuery = ''; $nextTick(() => { const event = new Event('input'); $el.previousElementSibling.dispatchEvent(event); })" class="absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400 hover:text-gray-600 cursor-pointer transition-colors" title="Effacer la recherche" data-astro-cid-g3bkqxyt> <svg fill="none" stroke="currentColor" viewBox="0 0 24 24" data-astro-cid-g3bkqxyt> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" data-astro-cid-g3bkqxyt></path> </svg> </button> </div> </div>  <div id="shop-details-panel" class="absolute top-60 right-4 bottom-4 w-80 z-[9999] bg-white rounded-xl shadow-2xl border border-gray-200 overflow-y-auto transition-all duration-300 ease-in-out opacity-0 translate-x-5 pointer-events-none" data-astro-cid-g3bkqxyt> <div class="p-5 relative" data-astro-cid-g3bkqxyt> <div id="shop-details-content-inner" data-astro-cid-g3bkqxyt> <!-- Le contenu sera inject\xE9 ici dynamiquement --> </div> </div> </div>  `, "  <script>(function(){", '\n    // Attendre que la page soit compl\xE8tement charg\xE9e\n    window.addEventListener("load", function () {\n      console.log("Initialisation de la carte...");\n\n      try {\n        // Cr\xE9er des ic\xF4nes personnalis\xE9es avec la couleur sable\n        const defaultIcon = L.icon({\n          iconUrl:\n            "data:image/svg+xml;base64," +\n            btoa(\\`\n            <svg width="25" height="41" viewBox="0 0 25 41" xmlns="http://www.w3.org/2000/svg">\n              <path d="M12.5 0C5.6 0 0 5.6 0 12.5c0 9.4 12.5 28.5 12.5 28.5s12.5-19.1 12.5-28.5C25 5.6 19.4 0 12.5 0z" fill="#E3B85C"/>\n              <circle cx="12.5" cy="12.5" r="6" fill="white"/>\n            </svg>\n          \\`),\n          shadowUrl:\n            "https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png",\n          iconSize: [25, 41],\n          iconAnchor: [12, 41],\n          popupAnchor: [1, -34],\n          shadowSize: [41, 41],\n        });\n\n        const selectedIcon = L.icon({\n          iconUrl:\n            "data:image/svg+xml;base64," +\n            btoa(\\`\n            <svg width="35" height="57" viewBox="0 0 35 57" xmlns="http://www.w3.org/2000/svg">\n              <path d="M17.5 0C7.8 0 0 7.8 0 17.5c0 13.1 17.5 39.5 17.5 39.5s17.5-26.4 17.5-39.5C35 7.8 27.2 0 17.5 0z" fill="#D4A853"/>\n              <circle cx="17.5" cy="17.5" r="8.5" fill="white"/>\n              <circle cx="17.5" cy="17.5" r="6" fill="#E3B85C"/>\n            </svg>\n          \\`),\n          shadowUrl:\n            "https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png",\n          iconSize: [35, 57],\n          iconAnchor: [17, 57],\n          popupAnchor: [1, -47],\n          shadowSize: [57, 57],\n          className: "selected-marker",\n        });\n\n        const foundIcon = L.icon({\n          iconUrl:\n            "data:image/svg+xml;base64," +\n            btoa(\\`\n            <svg width="30" height="49" viewBox="0 0 30 49" xmlns="http://www.w3.org/2000/svg">\n              <path d="M15 0C6.7 0 0 6.7 0 15c0 11.2 15 34 15 34s15-22.8 15-34C30 6.7 23.3 0 15 0z" fill="#E3B85C"/>\n              <circle cx="15" cy="15" r="7" fill="white"/>\n              <circle cx="15" cy="15" r="5" fill="#E3B85C"/>\n            </svg>\n          \\`),\n          shadowUrl:\n            "https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png",\n          iconSize: [30, 49],\n          iconAnchor: [15, 49],\n          popupAnchor: [1, -41],\n          shadowSize: [49, 49],\n          className: "found-marker",\n        });\n\n        // Cr\xE9ation de la carte centr\xE9e sur la France avec limites strictes\n        const map = L.map("map", {\n          scrollWheelZoom: false, // D\xE9sactiver le zoom molette normal\n          doubleClickZoom: true, // Garder le double-clic pour zoomer\n          boxZoom: true, // Garder la s\xE9lection pour zoomer\n          keyboard: true, // Garder les contr\xF4les clavier\n          minZoom: 2, // Zoom minimum mondial\n          maxZoom: 12, // R\xE9duire le zoom maximum \xE0 12 pour \xE9viter les zones grises\n          zoomControl: true, // Garder les contr\xF4les de zoom\n        });\n\n        // D\xE9sactiver explicitement le handler de scroll wheel de Leaflet\n        map.scrollWheelZoom.disable();\n\n        // Ajout de la couche de tuiles OpenStreetMap\n        L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {\n          maxZoom: 12, // R\xE9duire \xE0 12 pour \xE9viter les zones grises\n          attribution:\n            \'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>\',\n        }).addTo(map);\n\n        // Gestion du zoom avec CTRL + molette uniquement\n        map.getContainer().addEventListener(\n          "wheel",\n          function (e) {\n            if (e.ctrlKey) {\n              e.preventDefault();\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n\n              // D\xE9bogage pour comprendre le comportement\n              console.log("CTRL + Wheel Event:", {\n                deltaY: e.deltaY,\n                deltaX: e.deltaX,\n                deltaMode: e.deltaMode,\n                wheelDelta: e.wheelDelta,\n                wheelDeltaY: e.wheelDeltaY,\n                type: e.type,\n                ctrlKey: e.ctrlKey,\n                direction:\n                  e.deltaY > 0\n                    ? "down (should zoom out)"\n                    : "up (should zoom in)",\n              });\n\n              const currentZoom = map.getZoom();\n              // deltaY > 0 = scroll vers le bas = ZOOM OUT (-0.5)\n              // deltaY < 0 = scroll vers le haut = ZOOM IN (+0.5)\n              const zoomChange = e.deltaY > 0 ? -0.5 : 0.5;\n              const newZoom = Math.max(\n                map.getMinZoom(),\n                Math.min(map.getMaxZoom(), currentZoom + zoomChange)\n              );\n\n              console.log("Zoom:", {\n                currentZoom: currentZoom,\n                zoomChange: zoomChange,\n                newZoom: newZoom,\n                applied: newZoom !== currentZoom,\n              });\n\n              const rect = map.getContainer().getBoundingClientRect();\n              const x = e.clientX - rect.left;\n              const y = e.clientY - rect.top;\n              const containerPoint = L.point(x, y);\n              const latLng = map.containerPointToLatLng(containerPoint);\n\n              map.setZoomAround(latLng, newZoom);\n\n              return false;\n            }\n          },\n          { passive: false, capture: true }\n        );\n\n        // Essayer aussi de capturer l\'\xE9v\xE9nement directement sur le document\n        document.addEventListener(\n          "wheel",\n          function (e) {\n            if (e.ctrlKey && e.target && e.target.closest("#map")) {\n              console.log("Document wheel event (backup):", {\n                deltaY: e.deltaY,\n                target: e.target,\n                isMapTarget: !!e.target.closest("#map"),\n              });\n            }\n          },\n          { passive: false, capture: true }\n        );\n\n        // Centrer directement sur Paris avec un zoom pr\xE9cis\n        map.setView([47.8567, 5.3522], 6.5);\n\n        // Forcer le redimensionnement initial de la carte\n        setTimeout(() => {\n          map.invalidateSize();\n          // Recentrer apr\xE8s le redimensionnement initial\n          map.setView([47.8567, 5.3522], 6.5);\n        }, 200);\n\n        console.log("Carte limit\xE9e \xE0 la France initialis\xE9e avec succ\xE8s");\n\n        // Fonction de g\xE9ocodage avec Nominatim (OpenStreetMap)\n        async function geocodeAddress(address) {\n          try {\n            const response = await fetch(\n              \\`https://nominatim.openstreetmap.org/search?format=json&q=\\${encodeURIComponent(address + ", France")}&limit=1&countrycodes=fr\\`\n            );\n            const data = await response.json();\n            if (data && data.length > 0) {\n              return {\n                lat: parseFloat(data[0].lat),\n                lng: parseFloat(data[0].lon),\n                success: true,\n              };\n            }\n            return { success: false };\n          } catch (error) {\n            console.error("Erreur g\xE9ocodage pour", address, ":", error);\n            return { success: false };\n          }\n        }\n\n        // Fonction pour cr\xE9er le contenu HTML du popup\n        function createPopupContent(shop) {\n          let imageHtml = "";\n          if (shop.img && shop.img.length > 0) {\n            imageHtml = \\`<img src="\\${shop.img}" alt="\\${shop.nom}" class="w-full h-40 object-cover">\\`;\n          }\n\n          let continentHtml = "";\n          if (\n            shop.expand &&\n            shop.expand.continent &&\n            shop.expand.continent.length > 0\n          ) {\n            const continents = shop.expand.continent\n              .map((c) => c.nom || c)\n              .join(", ");\n            continentHtml = \\`\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F30D}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\\${continents}</div>\n              </div>\n            \\`;\n          } else if (shop.continent) {\n            continentHtml = \\`\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F30D}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\\${shop.continent}</div>\n              </div>\n            \\`;\n          }\n\n          let siteWebHtml = "";\n          if (shop.site_web) {\n            siteWebHtml = \\`\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F310}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\n                  <a href="\\${shop.site_web}" target="_blank" rel="noopener" class="text-red-500 hover:underline font-medium">\\${shop.site_web}</a>\n                </div>\n              </div>\n            \\`;\n          }\n\n          let horaireHtml = "";\n          if (shop.horaire) {\n            horaireHtml = \\`\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F552}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\\${shop.horaire}</div>\n              </div>\n            \\`;\n          }\n\n          let telephoneHtml = "";\n          if (shop.telephone) {\n            telephoneHtml = \\`\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F4DE}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\n                  <a href="tel:\\${shop.telephone}" class="text-red-500 hover:underline font-medium">\\${shop.telephone}</a>\n                </div>\n              </div>\n            \\`;\n          }\n\n          let adresseHtml = "";\n          if (shop.adresse) {\n            adresseHtml = \\`\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u{1F4CD}</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\\${shop.adresse}</div>\n              </div>\n            \\`;\n          }\n\n          let descriptionHtml = "";\n          if (shop.description) {\n            descriptionHtml = \\`\n              <div class="flex items-start mb-2.5 font-raleway">\n                <div class="mr-2.5 mt-0.5 text-sm">\u2139\uFE0F</div>\n                <div class="flex-1 text-gray-600 leading-tight text-sm">\\${shop.description}</div>\n              </div>\n            \\`;\n          }\n\n          return \\`\n            \\${imageHtml}\n            <h2 class="!text-lg font-bold text-gray-800 mb-3 font-raleway">\\${shop.nom}</h2>\n            \\${adresseHtml}\n            \\${telephoneHtml}\n            \\${horaireHtml}\n            \\${siteWebHtml}\n            \\${continentHtml}\n            \\${descriptionHtml}\n          \\`;\n        }\n\n        // Fonction pour afficher les d\xE9tails d\'une boutique dans le panneau\n        function showShopDetails(shop) {\n          const panel = document.getElementById("shop-details-panel");\n          const content = document.getElementById("shop-details-content-inner");\n\n          if (panel && content) {\n            content.innerHTML = createPopupContent(shop);\n            panel.classList.remove(\n              "opacity-0",\n              "translate-x-5",\n              "pointer-events-none"\n            );\n            panel.classList.add(\n              "opacity-100",\n              "translate-x-0",\n              "pointer-events-auto"\n            );\n\n            // Forcer le redimensionnement de la carte apr\xE8s l\'ouverture du panneau\n            setTimeout(() => {\n              map.invalidateSize();\n            }, 350); // Apr\xE8s la transition du panneau\n          }\n        }\n\n        // Fonction pour masquer le panneau de d\xE9tails\n        function hideShopDetails() {\n          const panel = document.getElementById("shop-details-panel");\n          if (panel) {\n            panel.classList.remove(\n              "opacity-100",\n              "translate-x-0",\n              "pointer-events-auto"\n            );\n            panel.classList.add(\n              "opacity-0",\n              "translate-x-5",\n              "pointer-events-none"\n            );\n\n            // Forcer le redimensionnement de la carte apr\xE8s la fermeture du panneau\n            setTimeout(() => {\n              map.invalidateSize();\n            }, 350); // Apr\xE8s la transition du panneau\n          }\n        }\n\n        // Variable pour stocker tous les marqueurs avec leurs donn\xE9es\n        let shopsMarkers = [];\n        let allShopsData = [];\n        let selectedMarker = null;\n\n        // Fonction pour r\xE9initialiser tous les marqueurs au style par d\xE9faut\n        function resetAllMarkers() {\n          shopsMarkers.forEach((markerData) => {\n            markerData.marker.setIcon(defaultIcon);\n          });\n          selectedMarker = null;\n        }\n\n        // Fonction pour s\xE9lectionner un marqueur sp\xE9cifique\n        function selectMarker(markerData, shouldZoom = false) {\n          // R\xE9initialiser tous les marqueurs d\'abord\n          resetAllMarkers();\n\n          // Appliquer le style s\xE9lectionn\xE9\n          markerData.marker.setIcon(selectedIcon);\n          selectedMarker = markerData;\n\n          // Ouvrir le panneau de d\xE9tails\n          showShopDetails(markerData.shop);\n\n          // Forcer le redimensionnement de la carte pour \xE9viter les probl\xE8mes d\'affichage\n          setTimeout(() => {\n            map.invalidateSize();\n          }, 100);\n\n          // Centrer la vue sur le marqueur avec ou sans zoom selon le contexte\n          setTimeout(() => {\n            const markerLatLng = markerData.marker.getLatLng();\n\n            if (shouldZoom) {\n              // Recherche : zoom + centrage + d\xE9calage\n              const currentZoom = map.getZoom();\n              const targetZoom = Math.min(Math.max(currentZoom, 9), 11);\n\n              console.log(\n                \\`\u{1F50D} Recherche - Zoom de \\${currentZoom} vers \\${targetZoom}\\`\n              );\n\n              // 1. Centrer avec zoom\n              map.setView(markerLatLng, targetZoom, {\n                animate: true,\n                duration: 0.6,\n              });\n\n              // 2. D\xE9caler apr\xE8s zoom\n              setTimeout(() => {\n                map.panBy([168, 0], {\n                  animate: true,\n                  duration: 0.4,\n                });\n              }, 650);\n            } else {\n              // Clic direct : juste centrage + d\xE9calage (pas de zoom)\n              console.log(\\`\u{1F5B1}\uFE0F Clic direct - Centrage sans zoom\\`);\n\n              // Calculer le centre visuel en tenant compte du panneau lat\xE9ral\n              // Le panneau fait 320px, donc la zone visible est r\xE9duite\n              const mapContainer = map.getContainer();\n              const mapWidth = mapContainer.offsetWidth;\n              const panelWidth = 320; // Largeur du panneau\n\n              // Le centre visuel devrait \xEAtre d\xE9cal\xE9 vers la gauche\n              const visualCenterOffsetX = -panelWidth / 2; // -160px vers la gauche\n\n              // Convertir le marqueur en point pixel\n              const markerPoint = map.latLngToContainerPoint(markerLatLng);\n\n              // Calculer le point central visuel\n              const visualCenterX = mapWidth / 2 + visualCenterOffsetX;\n              const visualCenterY = mapContainer.offsetHeight / 2;\n\n              // Calculer le d\xE9calage n\xE9cessaire\n              const deltaX = markerPoint.x - visualCenterX;\n              const deltaY = markerPoint.y - visualCenterY;\n\n              console.log(\\`D\xE9calage corrig\xE9: \\${deltaX}px, \\${deltaY}px\\`);\n\n              // Utiliser seulement panBy pour d\xE9placer la vue (pas de zoom du tout)\n              map.panBy([deltaX, deltaY], {\n                animate: true,\n                duration: 0.5,\n              });\n            }\n\n            // Invalidation finale\n            setTimeout(() => {\n              map.invalidateSize();\n            }, 1100);\n          }, 150);\n\n          console.log(\n            \\`\u2705 Marqueur s\xE9lectionn\xE9: \\${markerData.shop.nom} (zoom: \\${shouldZoom})\\`\n          );\n        }\n\n        // Fonction de recherche et filtrage des marqueurs am\xE9lior\xE9e\n        function filterShopsBySearch(searchTerm) {\n          const searchLower = searchTerm.toLowerCase().trim();\n\n          if (searchLower === "") {\n            // Afficher tous les marqueurs et r\xE9initialiser les styles\n            resetAllMarkers();\n            shopsMarkers.forEach((markerData) => {\n              if (!map.hasLayer(markerData.marker)) {\n                map.addLayer(markerData.marker);\n              }\n            });\n\n            // Masquer le panneau de d\xE9tails\n            hideShopDetails();\n\n            // Ajuster la vue pour montrer tous les marqueurs\n            if (shopsMarkers.length > 0) {\n              const group = new L.featureGroup(\n                shopsMarkers.map((m) => m.marker)\n              );\n              map.fitBounds(group.getBounds().pad(0.1));\n            }\n            return;\n          }\n\n          // R\xE9initialiser les styles avant de filtrer\n          resetAllMarkers();\n\n          // Filtrer les marqueurs selon le nom de la boutique\n          const matchingMarkers = [];\n\n          shopsMarkers.forEach((markerData) => {\n            const shopName = markerData.shop.nom.toLowerCase();\n\n            if (shopName.includes(searchLower)) {\n              // Afficher le marqueur avec le style "trouv\xE9"\n              if (!map.hasLayer(markerData.marker)) {\n                map.addLayer(markerData.marker);\n              }\n              markerData.marker.setIcon(foundIcon);\n              matchingMarkers.push(markerData);\n            } else {\n              // Masquer le marqueur s\'il ne correspond pas\n              if (map.hasLayer(markerData.marker)) {\n                map.removeLayer(markerData.marker);\n              }\n            }\n          });\n\n          // Logique de s\xE9lection intelligente\n          if (matchingMarkers.length === 1) {\n            // 1 seul r\xE9sultat \u2192 S\xE9lection automatique avec zoom\n            console.log(\n              \\`\u{1F3AF} 1 r\xE9sultat trouv\xE9, s\xE9lection automatique avec zoom\\`\n            );\n            selectMarker(matchingMarkers[0], true); // Recherche = avec zoom\n          } else if (\n            matchingMarkers.length > 1 &&\n            matchingMarkers.length <= 3\n          ) {\n            // 2-3 r\xE9sultats \u2192 Zoomer et proposer la s\xE9lection du premier si recherche tr\xE8s pr\xE9cise\n            const exactMatches = matchingMarkers.filter(\n              (markerData) => markerData.shop.nom.toLowerCase() === searchLower\n            );\n\n            if (exactMatches.length === 1) {\n              // Correspondance exacte trouv\xE9e avec zoom\n              console.log(\\`\u{1F3AF} Correspondance exacte trouv\xE9e avec zoom\\`);\n              selectMarker(exactMatches[0], true); // Recherche = avec zoom\n            } else {\n              // Plusieurs r\xE9sultats, juste zoomer\n              const group = new L.featureGroup(\n                matchingMarkers.map((m) => m.marker)\n              );\n              map.fitBounds(group.getBounds().pad(0.2));\n              hideShopDetails();\n              console.log(\\`\u{1F4CD} \\${matchingMarkers.length} r\xE9sultats trouv\xE9s\\`);\n            }\n          } else if (matchingMarkers.length > 3) {\n            // Beaucoup de r\xE9sultats \u2192 Juste zoomer\n            const group = new L.featureGroup(\n              matchingMarkers.map((m) => m.marker)\n            );\n            map.fitBounds(group.getBounds().pad(0.2));\n            hideShopDetails();\n            console.log(\\`\u{1F4CD} \\${matchingMarkers.length} r\xE9sultats trouv\xE9s\\`);\n          } else {\n            // Aucun r\xE9sultat trouv\xE9\n            hideShopDetails();\n            console.log(\\`\u274C Aucune boutique trouv\xE9e pour "\\${searchTerm}"\\`);\n          }\n        }\n\n        // Initialiser la recherche apr\xE8s chargement de la page\n        function initializeSearch() {\n          // Essayer plusieurs s\xE9lecteurs pour trouver le bon champ de recherche\n          let searchInput = document.querySelector(\n            \'input[placeholder="CHERCHER UNE BOUTIQUE"]\'\n          );\n\n          if (!searchInput) {\n            // Fallback avec un s\xE9lecteur plus large\n            searchInput = document.querySelector(\'input[type="text"]\');\n          }\n\n          if (!searchInput) {\n            // Dernier fallback avec x-model\n            searchInput = document.querySelector(\'[x-model="searchQuery"]\');\n          }\n\n          if (searchInput) {\n            // Nettoyer les anciens gestionnaires d\'\xE9v\xE9nements\n            searchInput.removeEventListener("input", handleSearch);\n            searchInput.removeEventListener("keyup", handleSearch);\n\n            // Fonction de gestion de la recherche\n            function handleSearch(e) {\n              const searchTerm = e.target.value;\n              console.log("Recherche:", searchTerm);\n              filterShopsBySearch(searchTerm);\n            }\n\n            // Ajouter les nouveaux gestionnaires\n            searchInput.addEventListener("input", handleSearch);\n            searchInput.addEventListener("keyup", handleSearch);\n\n            console.log("\u2705 Recherche initialis\xE9e avec succ\xE8s");\n            console.log("Champ trouv\xE9:", searchInput);\n          } else {\n            console.error("\u274C Champ de recherche non trouv\xE9");\n            // R\xE9essayer apr\xE8s un d\xE9lai\n            setTimeout(initializeSearch, 500);\n          }\n        }\n\n        // Fonctions de filtrage par les filtres de la sidebar\n        function filterShopsByFilters() {\n          // R\xE9cup\xE9rer les valeurs des filtres depuis les \xE9l\xE9ments DOM\n          const selectedContinents = getSelectedContinents();\n          const selectedCategories = getSelectedCategories();\n          const selectedShopType = getSelectedShopType();\n\n          console.log("\u{1F527} Filtres appliqu\xE9s:", {\n            continents: selectedContinents,\n            categories: selectedCategories,\n            taille: selectedShopType,\n          });\n\n          // R\xE9initialiser tous les marqueurs\n          resetAllMarkers();\n\n          // Parcourir tous les marqueurs et appliquer les filtres\n          shopsMarkers.forEach((markerData) => {\n            let showMarker = true;\n            const shop = markerData.shop;\n\n            // Filtre par continent\n            if (selectedContinents.length > 0) {\n              const shopContinents = Array.isArray(shop.continent)\n                ? shop.continent\n                : [shop.continent];\n              const hasMatchingContinent = shopContinents.some((continent) =>\n                selectedContinents.includes(continent)\n              );\n              if (!hasMatchingContinent) {\n                showMarker = false;\n              }\n            }\n\n            // Filtre par cat\xE9gories\n            if (selectedCategories.length > 0) {\n              const shopCategories = Array.isArray(shop.categorie)\n                ? shop.categorie\n                : [shop.categorie];\n              const hasMatchingCategory = shopCategories.some((category) =>\n                selectedCategories.includes(category)\n              );\n              if (!hasMatchingCategory) {\n                showMarker = false;\n              }\n            }\n\n            // Filtre par taille de magasin\n            if (selectedShopType !== "tous") {\n              if (shop.taille !== selectedShopType) {\n                showMarker = false;\n              }\n            }\n\n            // Afficher ou masquer le marqueur\n            if (showMarker) {\n              if (!map.hasLayer(markerData.marker)) {\n                map.addLayer(markerData.marker);\n              }\n            } else {\n              if (map.hasLayer(markerData.marker)) {\n                map.removeLayer(markerData.marker);\n              }\n            }\n          });\n\n          // Masquer le panneau de d\xE9tails si aucun marqueur n\'est s\xE9lectionn\xE9\n          const visibleMarkers = shopsMarkers.filter((markerData) =>\n            map.hasLayer(markerData.marker)\n          );\n\n          if (visibleMarkers.length === 0) {\n            hideShopDetails();\n            console.log(\n              "\u274C Aucune boutique ne correspond aux filtres s\xE9lectionn\xE9s"\n            );\n          } else {\n            console.log(\n              \\`\u2705 \\${visibleMarkers.length} boutiques correspondent aux filtres\\`\n            );\n\n            // Ajuster la vue pour montrer les marqueurs visibles\n            if (visibleMarkers.length > 0) {\n              const group = new L.featureGroup(\n                visibleMarkers.map((m) => m.marker)\n              );\n              map.fitBounds(group.getBounds().pad(0.1));\n            }\n          }\n        }\n\n        // Fonctions utilitaires pour r\xE9cup\xE9rer les valeurs des filtres\n        function getSelectedContinents() {\n          // R\xE9cup\xE9rer les continents s\xE9lectionn\xE9s en regardant les boutons actifs\n          const continentButtons = document.querySelectorAll(\n            \'button[class*="bg-jaune"]\'\n          );\n          const selected = [];\n\n          continentButtons.forEach((button) => {\n            const text = button.textContent.trim();\n            if (text === "AFRIQUE") selected.push("Afrique");\n            else if (text === "AM\xC9RIQUE LATINE")\n              selected.push("Am\xE9rique Latine");\n            else if (text === "ASIE") selected.push("Asie");\n            else if (text === "MAGHREB") selected.push("Maghreb");\n          });\n\n          return selected;\n        }\n\n        function getSelectedCategories() {\n          // R\xE9cup\xE9rer les cat\xE9gories coch\xE9es\n          const categoryCheckboxes = document.querySelectorAll(\n            \'input[type="checkbox"]:checked\'\n          );\n          const selected = [];\n\n          categoryCheckboxes.forEach((checkbox) => {\n            selected.push(checkbox.value);\n          });\n\n          return selected;\n        }\n\n        function getSelectedShopType() {\n          // R\xE9cup\xE9rer la taille de magasin s\xE9lectionn\xE9e\n          const shopTypeSelect = document.querySelector(\n            \'select[x-model="selectedShopType"]\'\n          );\n          return shopTypeSelect ? shopTypeSelect.value : "tous";\n        }\n\n        // Initialiser les \xE9couteurs de filtres\n        function initializeFilters() {\n          console.log("\u{1F4CB} Initialisation des filtres...");\n\n          // Observer les clics sur les boutons de continent\n          document.addEventListener("click", (event) => {\n            if (\n              event.target.closest("button") &&\n              (event.target.textContent.includes("AFRIQUE") ||\n                event.target.textContent.includes("AM\xC9RIQUE LATINE") ||\n                event.target.textContent.includes("ASIE") ||\n                event.target.textContent.includes("MAGHREB") ||\n                event.target.textContent.includes("TOUS"))\n            ) {\n              setTimeout(filterShopsByFilters, 100);\n            }\n          });\n\n          // Observer les changements sur les checkboxes de cat\xE9gories\n          document.addEventListener("change", (event) => {\n            if (event.target.type === "checkbox") {\n              setTimeout(filterShopsByFilters, 50);\n            }\n          });\n\n          // Observer les changements sur le select de taille\n          document.addEventListener("change", (event) => {\n            if (event.target.tagName === "SELECT") {\n              setTimeout(filterShopsByFilters, 50);\n            }\n          });\n\n          // Observer le bouton de r\xE9initialisation\n          document.addEventListener("click", (event) => {\n            if (event.target.textContent.includes("R\xC9INITIALISER")) {\n              setTimeout(filterShopsByFilters, 150);\n            }\n          });\n\n          console.log("\u2705 Filtres initialis\xE9s avec succ\xE8s");\n        }\n\n        // Fonction pour afficher les boutiques sur la carte\n        async function displayShopsOnMap() {\n          console.log("D\xE9but du g\xE9ocodage des boutiques...");\n          console.log("Donn\xE9es boutiques re\xE7ues:", shops);\n\n          // Nettoyer les marqueurs existants\n          shopsMarkers.forEach((markerData) =>\n            map.removeLayer(markerData.marker)\n          );\n          shopsMarkers = [];\n          allShopsData = [];\n\n          let successCount = 0;\n          let errorCount = 0;\n\n          for (const shop of shops) {\n            if (!shop.adresse) {\n              console.warn("Pas d\'adresse pour la boutique:", shop.nom);\n              errorCount++;\n              continue;\n            }\n\n            console.log(\\`G\xE9ocodage de: \\${shop.nom} - \\${shop.adresse}\\`);\n\n            const coords = await geocodeAddress(shop.adresse);\n\n            if (coords.success) {\n              // Cr\xE9er le marqueur avec l\'ic\xF4ne par d\xE9faut\n              const marker = L.marker([coords.lat, coords.lng], {\n                icon: defaultIcon,\n              }).addTo(map);\n\n              // Ajouter un gestionnaire de clic pour s\xE9lectionner le marqueur\n              marker.on("click", function () {\n                const markerData = shopsMarkers.find(\n                  (m) => m.marker === marker\n                );\n                if (markerData) {\n                  selectMarker(markerData, false); // Clic direct = pas de zoom\n                }\n              });\n\n              // Stocker les donn\xE9es du marqueur et de la boutique\n              const markerData = {\n                marker: marker,\n                shop: shop,\n                coords: coords,\n              };\n\n              shopsMarkers.push(markerData);\n              allShopsData.push(shop);\n              successCount++;\n\n              console.log(\\`\u2705 \\${shop.nom} ajout\xE9 \xE0 la carte\\`);\n            } else {\n              console.error(\n                \\`\u274C Impossible de g\xE9ocoder: \\${shop.nom} - \\${shop.adresse}\\`\n              );\n              errorCount++;\n            }\n\n            // Petite pause pour \xE9viter de surcharger l\'API\n            await new Promise((resolve) => setTimeout(resolve, 100));\n          }\n\n          console.log(\n            \\`G\xE9ocodage termin\xE9: \\${successCount} succ\xE8s, \\${errorCount} erreurs\\`\n          );\n\n          // Ajuster la vue pour montrer tous les marqueurs si on en a\n          if (shopsMarkers.length > 0) {\n            const group = new L.featureGroup(shopsMarkers.map((m) => m.marker));\n            map.fitBounds(group.getBounds().pad(0.1));\n          }\n\n          // Initialiser la recherche apr\xE8s avoir charg\xE9 tous les marqueurs\n          initializeSearch();\n\n          // Initialiser les filtres\n          initializeFilters();\n\n          // R\xE9essayer l\'initialisation apr\xE8s un d\xE9lai pour Alpine.js\n          setTimeout(() => {\n            initializeSearch();\n            initializeFilters();\n          }, 1000);\n        }\n\n        // Lancer l\'affichage des boutiques\n        displayShopsOnMap();\n\n        // Ajouter un gestionnaire de redimensionnement pour maintenir la carte en bon \xE9tat\n        window.addEventListener("resize", function () {\n          setTimeout(() => {\n            map.invalidateSize();\n          }, 100);\n        });\n\n        // Invalidation suppl\xE9mentaire apr\xE8s un d\xE9lai pour s\'assurer que tout est bien affich\xE9\n        setTimeout(() => {\n          map.invalidateSize();\n          console.log("Carte redimensionn\xE9e - initialisation termin\xE9e");\n\n          // Derni\xE8re tentative d\'initialisation de la recherche\n          initializeSearch();\n        }, 1000);\n\n        // Ajouter un message d\'information au centre de la France\n        L.popup()\n          .setLatLng([46.603354, 1.888334])\n          .setContent(\n            \'<div style="text-align: center; font-family: Raleway;"><b>Magasins ASAFRAM</b><br>Trouvez nos points de vente en France<br><small>Chargement des boutiques en cours...</small></div>\'\n          )\n          .openOn(map);\n      } catch (error) {\n        console.error("Erreur lors de l\'initialisation de la carte:", error);\n        // Afficher un message d\'erreur \xE0 l\'utilisateur\n        const mapElement = document.getElementById("map");\n        if (mapElement) {\n          mapElement.innerHTML =\n            \'<div style="display: flex; align-items: center; justify-content: center; height: 100%; background: #f0f0f0; color: #666; font-family: Raleway;"><p>Impossible de charger la carte. Veuillez rafra\xEEchir la page.</p></div>\';\n        }\n      }\n    });\n  })();<\/script> <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer><\/script> '])), maybeRenderHead(), renderScript($$result2, "C:/Users/thain/Documents/GitHub/projet-co-s2-2025-01_asafram/src/pages/site-applicatif/trouver-magasin.astro?astro&type=script&index=0&lang.ts"), defineScriptVars({ shops })) })}`;
}, "C:/Users/thain/Documents/GitHub/projet-co-s2-2025-01_asafram/src/pages/site-applicatif/trouver-magasin.astro", void 0);

const $$file = "C:/Users/thain/Documents/GitHub/projet-co-s2-2025-01_asafram/src/pages/site-applicatif/trouver-magasin.astro";
const $$url = "/site-applicatif/trouver-magasin";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$TrouverMagasin,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
